import { Object3D, EventDispatcher, Scene, Camera, OrthographicCamera } from 'three';
export declare class CSS3DRenderer extends EventDispatcher {
    /**
     * Container element of CSS3D Scene.
     */
    readonly domElement: HTMLElement;
    /**
     * Camera element of CSS3D transform.
     */
    readonly cameraElement: HTMLElement;
    private _width;
    private _height;
    private _widthHalf;
    private _heightHalf;
    private matrix;
    private _spriteQuat;
    private _objectQuat;
    private isIE;
    private cache;
    private epsilon;
    private getDistanceToSquared;
    private zOrder;
    private getCameraCSSMatrix;
    private getObjectCSSMatrix;
    constructor();
    setClearColor(): void;
    /**
     * Get the size of container element.
     * @returns
     */
    getSize(): {
        width: number;
        height: number;
    };
    /**
     * Set the size of container element.
     * @param width The width of element
     * @param height The height of element
     */
    setSize(width: number, height: number): void;
    renderObject: (object: Object3D, scene: Scene, camera: Camera | OrthographicCamera, cameraCSSMatrix: string) => void;
    /**
     * Update CSS3D scene.
     * @param scene Three.js scene
     * @param camera Three.js camera
     */
    render(scene: Scene, camera: Camera): void;
}
